# @format
---
- name: Remove testnet data and restart Aztec node
  hosts: all
  gather_facts: yes
  become: yes
  become_method: sudo
  become_user: root

  tasks:
    - name: Stop aztec-node service
      systemd:
        name: aztec-node.service
        state: stopped
      register: stop_result
      ignore_errors: yes

    - name: Display stop result
      debug:
        msg: "Aztec node service stopped on {{ inventory_hostname }}"

    - name: Remove testnet data directory
      shell: |
        echo "=== Starting Testnet Data Removal ==="
        echo "Server: {{ inventory_hostname }}"
        echo "Date: $(date)"
        echo "Current user: $(whoami)"
        echo ""

        # Check if directory exists
        if [ -d "$HOME/.aztec/testnet/data" ]; then
          echo "Testnet data directory found: $HOME/.aztec/testnet/data"
          
          # Show directory size before removal
          echo "Directory size:"
          du -sh "$HOME/.aztec/testnet/data" 2>/dev/null || echo "Unable to get directory size"
          
          echo ""
          echo "Removing directory..."
          rm -rf "$HOME/.aztec/testnet/data"
          
          if [ ! -d "$HOME/.aztec/testnet/data" ]; then
            echo "SUCCESS: Directory removed successfully"
          else
            echo "ERROR: Failed to remove directory"
            exit 1
          fi
        else
          echo "WARNING: Testnet data directory not found: $HOME/.aztec/testnet/data"
          echo "Nothing to remove"
        fi

        echo ""
        echo "=== Testnet Data Removal Completed ==="
      args:
        executable: /bin/bash
      register: removal_result

    - name: Display removal result
      debug:
        var: removal_result.stdout_lines

    - name: Restart aztec-node service
      systemd:
        name: aztec-node.service
        state: restarted
        enabled: yes
      register: restart_result

    - name: Wait for service to start
      wait_for:
        timeout: 30
      delegate_to: localhost

    - name: Check service status after restart
      shell: systemctl status aztec-node.service --no-pager -l
      register: service_status
      ignore_errors: yes

    - name: Display restart results
      debug:
        msg: |
          Restart completed on {{ inventory_hostname }}
          Service status: {{ service_status.stdout_lines[2] if service_status.stdout_lines|length > 2 else 'Unknown' }}
          Active state: {{ 'Active' if 'active (running)' in service_status.stdout else 'Inactive/Failed' }}

    - name: Verify service is running
      shell: systemctl is-active aztec-node.service
      register: is_active
      failed_when: is_active.stdout != "active"

    - name: Final success message
      debug:
        msg: |
          ===========================================
          Testnet data removed successfully!
          Aztec node restarted and is running.
          Server: {{ inventory_hostname }}
          ===========================================
